DataParallel(
  (module): Net(
    (encoder): Encoder(
      (initial_block): DownsamplerBlock(
        (conv): Conv2d(3, 13, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
        (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
      )
      (layers): ModuleList(
        (0): DownsamplerBlock(
          (conv): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
        )
        (1): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (2): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (3): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (4): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (5): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (6): DownsamplerBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
        )
        (7): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (8): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (9): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (10): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(16, 16), dilation=(16, 16), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (11): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (12): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (13): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
        (14): conv_module(
          (conv3x3_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (bn1_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(16, 16), dilation=(16, 16), groups=128)
          (bn1_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0.1)
        )
      )
    )
    (decoder): Decoder(
      (layers): ModuleList(
        (0): UPS_Block(
          (conv): ConvTranspose2d(128, 64, kernel_size=(1, 1), stride=(2, 2), output_padding=(1, 1))
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
        )
        (1): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0)
        )
        (2): conv_module(
          (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (bn1_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0)
        )
        (3): UPS_Block(
          (conv): ConvTranspose2d(64, 16, kernel_size=(1, 1), stride=(2, 2), output_padding=(1, 1))
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
        )
        (4): conv_module(
          (conv3x3_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
          (bn1_1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
          (bn1_2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0)
        )
        (5): conv_module(
          (conv3x3_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
          (bn1_1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (conv1L_1): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn2_1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (conv3x3_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
          (bn1_2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (conv1L_2): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn2_2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          (dropout): Dropout2d(p=0)
        )
      )
      (output_conv): ConvTranspose2d(16, 20, kernel_size=(2, 2), stride=(2, 2))
    )
  )
)